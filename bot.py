import telebot
from telebot import types
import sqlite3

API_TOKEN = '7478443998:AAFuq6ZE_1yDiUX4YAHgyYa_kVYCcrYed7A'
bot = telebot.TeleBot(API_TOKEN)

user_data = {}

def save_question(user_id, question):
    conn = sqlite3.connect('bot_database.db')
    cursor = conn.cursor()
    cursor.execute('''
        INSERT INTO questions (user_id, question)
        VALUES (?, ?)
    ''', (user_id, question))
    conn.commit()
    conn.close()

def start_survey(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('–†—ç–ø')
    itembtn2 = types.KeyboardButton('–†–æ–∫')
    itembtn3 = types.KeyboardButton('–ü–æ–ø')
    itembtn4 = types.KeyboardButton('–ö–ª–∞—Å—Å–∏–∫–∞')
    itembtn5 = types.KeyboardButton('–•–∏–ø-—Ö–æ–ø')
    itembtn6 = types.KeyboardButton('–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞')
    itembtn7 = types.KeyboardButton('–î—Ä—É–≥–æ–π –≤–∞—Ä–∏–∞–Ω—Ç')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4, itembtn5, itembtn6, itembtn7)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä –º—É–∑—ã–∫–∏:', reply_markup=markup)
    bot.register_next_step_handler(msg, process_genre)

def process_genre(message):
    user_id = message.from_user.id
    genre = message.text
    user_data[user_id]['genre'] = genre

    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('–ù–∞—á–∏–Ω–∞—é—â–∏–π')
    itembtn2 = types.KeyboardButton('–°—Ä–µ–¥–Ω–∏–π')
    itembtn3 = types.KeyboardButton('–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π')
    markup.add(itembtn1, itembtn2, itembtn3)
    msg = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —É—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–æ–≤:', reply_markup=markup)
    bot.register_next_step_handler(msg, process_level)

def process_level(message):
    user_id = message.from_user.id
    level = message.text
    user_data[user_id]['level'] = level

    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('–î–∞')
    itembtn2 = types.KeyboardButton('–ù–µ—Ç')
    markup.add(itembtn1, itembtn2)
    msg = bot.send_message(message.chat.id, '–†–∞–±–æ—Ç–∞–ª–∏ –ª–∏ –≤—ã –Ω–∞ —Å—Ç—É–¥–∏–∏?', reply_markup=markup)
    bot.register_next_step_handler(msg, process_studio)

def process_studio(message):
    user_id = message.from_user.id
    studio = message.text
    user_data[user_id]['studio'] = studio

    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('–î–∞')
    itembtn2 = types.KeyboardButton('–ù–µ—Ç')
    markup.add(itembtn1, itembtn2)
    msg = bot.send_message(message.chat.id, '–ü–∏—Å–∞–ª–∏ –ª–∏ –≤—ã —Å–≤–æ—é –º—É–∑—ã–∫—É?', reply_markup=markup)
    bot.register_next_step_handler(msg, process_written_music)

def process_written_music(message):
    user_id = message.from_user.id
    written_music = message.text
    user_data[user_id]['written_music'] = written_music

    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('–î–∞')
    itembtn2 = types.KeyboardButton('–ù–µ—Ç')
    markup.add(itembtn1, itembtn2)
    msg = bot.send_message(message.chat.id, '–•–æ—Ç–µ–ª–∏ –±—ã –≤—ã –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –∞–ª—å–±–æ–º?', reply_markup=markup)
    bot.register_next_step_handler(msg, process_album)

def process_album(message):
    user_id = message.from_user.id
    album = message.text
    user_data[user_id]['album'] = album

    bot.send_message(message.chat.id, '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! üéâ')
    show_main_menu(message)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    first_name = message.from_user.first_name
    user_data[user_id] = {'name': first_name}

    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
    markup.add(itembtn1)

    with open('welcome.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo, caption=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {first_name}! üé∂ –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –º—É–∑—ã–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å.", reply_markup=markup)
    
    bot.send_message(message.chat.id, "–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–¥–±–æ—Ä–∞ –≤–∏–¥–µ–æ–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—à–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.")

@bot.message_handler(func=lambda message: True)
def menu(message):
    if message.text == '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å':
        create_profile(message)
    elif message.text == 'üéµ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã':
        show_materials_menu(message)
    elif message.text == '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':
        ask_question(message)
    elif message.text == 'üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å':
        view_profile(message)
    elif message.text == '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        settings(message)
    else:
        bot.reply_to(message, '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª.')

def create_profile(message):
    start_survey(message)

def show_main_menu(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('üéµ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã')
    itembtn2 = types.KeyboardButton('‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å')
    itembtn3 = types.KeyboardButton('üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å')
    itembtn4 = types.KeyboardButton('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏')
    markup.add(itembtn1, itembtn2, itembtn3, itembtn4)
    bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', reply_markup=markup)

def show_materials_menu(message):
    markup = types.InlineKeyboardMarkup()
    itembtn1 = types.InlineKeyboardButton('üìö –ê—É–¥–∏–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', callback_data='audio_materials')
    itembtn2 = types.InlineKeyboardButton('üìπ –í–∏–¥–µ–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã', callback_data='video_materials')
    markup.add(itembtn1, itembtn2)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data in ['audio_materials', 'video_materials'])
def show_materials(call):
    if call.data == 'audio_materials':
        bot.send_message(call.message.chat.id, '–í–æ—Ç –≤–∞—à–∏ –∞—É–¥–∏–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:')
        markup = types.InlineKeyboardMarkup()
        itembtn1 = types.InlineKeyboardButton('–≠–∫—Å–ø–µ—Ä—Ç 1 - –°–æ–∑–¥–∞–Ω–∏–µ –º—É–∑—ã–∫–∏ —Å –Ω—É–ª—è', callback_data='audio_expert_1')
        itembtn2 = types.InlineKeyboardButton('–≠–∫—Å–ø–µ—Ä—Ç 2 - –ó–∞–ø–∏—Å—å –Ω–∞ —Å—Ç—É–¥–∏–∏ –Ω–æ–≤–∏—á–∫–∞', callback_data='audio_expert_2')
        markup.add(itembtn1, itembtn2)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª:', reply_markup=markup)
    elif call.data == 'video_materials':
        bot.send_message(call.message.chat.id, '–í–æ—Ç –≤–∞—à–∏ –≤–∏–¥–µ–æ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:')
        markup = types.InlineKeyboardMarkup()
        itembtn1 = types.InlineKeyboardButton('–≠–∫—Å–ø–µ—Ä—Ç 1 - –°–æ–∑–¥–∞–Ω–∏–µ –º—É–∑—ã–∫–∏ —Å –Ω—É–ª—è', callback_data='video_expert_1')
        itembtn2 = types.InlineKeyboardButton('–≠–∫—Å–ø–µ—Ä—Ç 2 - –ó–∞–ø–∏—Å—å –Ω–∞ —Å—Ç—É–¥–∏–∏ –Ω–æ–≤–∏—á–∫–∞', callback_data='video_expert_2')
        markup.add(itembtn1, itembtn2)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª:', reply_markup=markup)

def ask_question(message):
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å:')
    bot.register_next_step_handler(msg, process_question)

def process_question(message):
    user_id = message.from_user.id
    question = message.text
    save_question(user_id, question)
    bot.send_message(message.chat.id, '–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —ç–∫—Å–ø–µ—Ä—Ç–∞–º. –°–ø–∞—Å–∏–±–æ!')

    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    itembtn = types.KeyboardButton('‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(itembtn)
    bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=markup)

def view_profile(message):
    user_id = message.from_user.id
    profile_info = f"–ò–º—è: {user_data[user_id]['name']}\n–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: {user_data[user_id].get('preferences', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n–£—Ä–æ–≤–µ–Ω—å –Ω–∞–≤—ã–∫–æ–≤: {user_data[user_id].get('skill_level', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}"
    bot.send_message(message.chat.id, profile_info)

    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    itembtn = types.KeyboardButton('‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(itembtn)
    bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=markup)

def settings(message):
    markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
    itembtn2 = types.KeyboardButton('üåê –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞')
    markup.add(itembtn1, itembtn2)
    bot.send_message(message.chat.id, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏:', reply_markup=markup)

    markup_back = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    itembtn = types.KeyboardButton('‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup_back.add(itembtn)
    bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', reply_markup=markup_back)

@bot.callback_query_handler(func=lambda call: call.data.startswith('audio_expert') or call.data.startswith('video_expert'))
def handle_expert_selection(call):
    if call.data.startswith('audio_expert'):
        expert_number = call.data.split('_')[-1]
        bot.send_message(call.message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∞—É–¥–∏–æ –º–∞—Ç–µ—Ä–∏–∞–ª: –≠–∫—Å–ø–µ—Ä—Ç {expert_number}')
    elif call.data.startswith('video_expert'):
        expert_number = call.data.split('_')[-1]
        bot.send_message(call.message.chat.id, f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –≤–∏–¥–µ–æ –º–∞—Ç–µ—Ä–∏–∞–ª: –≠–∫—Å–ø–µ—Ä—Ç {expert_number}')

bot.polling()